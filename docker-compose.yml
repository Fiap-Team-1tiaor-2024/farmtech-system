services:
  backend:
    build:
      context: ./src/backend
      dockerfile: Dockerfile
    container_name: farmtech-backend
    ports:
      - "8080:8080"
    volumes:
      - ./src:/app
      - ./logs:/app/logs # Seu volume de logs existente
      - ./imagens_yolo_teste:/app/imagens_para_teste # Novo volume para as imagens
    env_file:
      - ./src/infra/.env
    environment:
      - PYTHONPATH=/app
    networks:
      - farmtech-network

  frontend:
    build:
      context: ./src/frontend
    container_name: farmtech-frontend
    ports:
      - "8501:8501"
    volumes:
      - ./src/frontend:/app
    depends_on:
      - backend
    networks:
      - farmtech-network

  estatistica:
    build:
      context: ./src/estatistica
    container_name: farmtech-estatistica
    volumes:
      - ./src/estatistica:/estatistica
    command: ["Rscript", "/estatistica/r/estatistica.r"]
    networks:
      - farmtech-network

  db:
    image: postgres:16
    container_name: farmtech-db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: vaicorinthians123
      POSTGRES_DB: farmtech
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - farmtech-network
  
  db-setup:
    build:
      context: ./src/backend
    container_name: farmtech-db-setup
    depends_on:
      - db
    command: >
      sh -c "sleep 5 && python /app/infra/setup/setup_db.py"
    environment:
      - PYTHONPATH=/app
    env_file:
      - ./src/infra/.env
    volumes:
      - ./src:/app
    networks:
      - farmtech-network

networks:
  farmtech-network:
    driver: bridge

volumes:
  postgres_data: